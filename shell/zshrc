#!/bin/bash
#
#
# ▄▄▄ .• ▌ ▄ ·. • ▌ ▄ ·.  ▄▄▄·
# ▀▄.▀··██ ▐███▪·██ ▐███▪▐█ ▀█
# ▐▀▀▪▄▐█ ▌▐▌▐█·▐█ ▌▐▌▐█·▄█▀▀█
# ▐█▄▄▌██ ██▌▐█▌██ ██▌▐█▌▐█ ▪▐▌
#  ▀▀▀ ▀▀  █▪▀▀▀▀▀  █▪▀▀▀ ▀  ▀
#
# © 2021-2025 Emma Campbell
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject
# to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

export DOTFILES="$HOME/.dotfiles"

export LSCOLORS='exfxcxdxbxegedabagacad'
export CLICOLOR=true

DEFAULT_USER="$(whoami)"

source ~/.node
source ~/.java
source ~/.python
source ~/.aliases

if [[ -e ~/.localrc ]]; then
  source ~/.localrc
fi

source ~/.paths
source "$HOME/.prompt"

if [[ -e ~/.zshrc.local ]]; then
  source ~/.zshrc.local
fi

if [[ -d ~/.func ]]; then
  local files=("${(@f)$(find -L ~/.func -iname "*.sh")}")
  # read -r files <<< $(find -L ~/.func -iname "*.sh")
  for f in "${files[@]}"; do
    source "$f"
  done
fi

eval "$(zoxide init zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


if [[ "$TERM_PROGRAM" == "ghostty" ]]; then
  export TERM=xterm-256color
fi


source "$HOME/.cargo/env"

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /opt/homebrew/bin/terraform terraform

alias claude="/Users/emmacampbell/.claude/local/claude"
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

